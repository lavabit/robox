{
    "variables": {
        "box_version": "{{env `VERSION`}}",
        "quay-user": "{{env `QUAY_USER`}}",
        "docker-user": "{{env `DOCKER_USER`}}",
        "quay-password": "{{env `QUAY_PASSWORD`}}",
        "docker-password": "{{env `DOCKER_PASSWORD`}}"
    },
    "provisioners": [
        {
            "type": "shell",
            "scripts": [
                "scripts/centos6/yum.sh",
                "scripts/centos6/base.sh",
                "scripts/centos6/network.sh",
                "scripts/centos6/vga.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos6-docker"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/centos6/updatedb.sh",
                "scripts/centos6/cleanup.sh",
                "scripts/centos6/dockerize.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "pause_before": "120s",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos6-docker"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/centos7/network.sh",
                "scripts/centos7/yum.sh",
                "scripts/centos7/base.sh",
                "scripts/centos7/reboot.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos7-docker"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/centos7/floppy.sh",
                "scripts/centos7/cleanup.sh",
                "scripts/centos7/unyum.sh",
                "scripts/centos7/dockerize.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "pause_before": "120s",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos7-docker"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/centos8/network.sh",
                "scripts/centos8/dnf.sh",
                "scripts/centos8/base.sh",
                "scripts/centos8/reboot.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos8-docker"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "scripts/centos8/floppy.sh",
                "scripts/centos8/cleanup.sh",
                "scripts/centos8/undnf.sh",
                "scripts/centos8/dockerize.sh"
            ],
            "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
            "pause_before": "120s",
            "start_retry_timeout": "15m",
            "expect_disconnect": "true",
            "only": [
                "generic-centos8-docker"
            ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel6/network.sh",
            "scripts/rhel6/yum.sh",
            "scripts/rhel6/base.sh",
            "scripts/rhel6/reboot.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel6-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel6/vga.sh",
            "scripts/rhel6/updatedb.sh",
            "scripts/rhel6/cleanup.sh",
            "scripts/rhel6/unyum.sh",
            "scripts/rhel6/dockerize.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "pause_before": "120s",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel6-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel7/network.sh",
            "scripts/rhel7/yum.sh",
            "scripts/rhel7/base.sh",
            "scripts/rhel7/reboot.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel7-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel7/floppy.sh",
            "scripts/rhel7/updatedb.sh",
            "scripts/rhel7/cleanup.sh",
            "scripts/rhel7/unyum.sh",
            "scripts/rhel7/dockerize.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "pause_before": "120s",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel7-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel8/network.sh",
            "scripts/rhel8/dnf.sh",
            "scripts/rhel8/base.sh",
            "scripts/rhel8/reboot.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel8-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/rhel8/floppy.sh",
            "scripts/rhel8/updatedb.sh",
            "scripts/rhel8/cleanup.sh",
            "scripts/rhel8/undnf.sh",
            "scripts/rhel8/dockerize.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "pause_before": "120s",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-rhel8-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/oracle7/network.sh",
            "scripts/oracle7/yum.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-oracle7-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/oracle7/floppy.sh",
            "scripts/oracle7/cleanup.sh",
            "scripts/oracle7/dockerize.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "pause_before": "120s",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-oracle7-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/oracle8/network.sh",
            "scripts/oracle8/dnf.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-oracle8-docker"
          ]
        },
        {
          "type": "shell",
          "scripts": [
            "scripts/oracle8/floppy.sh",
            "scripts/oracle8/cleanup.sh",
            "scripts/oracle8/dockerize.sh"
          ],
          "execute_command": "{{.Vars}} /bin/bash '{{.Path}}'",
          "pause_before": "120s",
          "start_retry_timeout": "15m",
          "expect_disconnect": "true",
          "only": [
            "generic-oracle8-docker"
          ]
        },
        {
            "type": "file",
            "direction": "download",
            "source": "/tmp/{{build_name}}.tar",
            "destination": "output/{{build_name}}-{{user `box_version`}}.tar"
        }
    ],
    "builders": [
        {
            "type": "qemu",
            "name": "generic-centos6-docker",
            "vm_name": "generic-centos6-docker",
            "output_directory": "output/generic-centos6-docker",
            "accelerator": "kvm",
            "qemu_binary": "/usr/libexec/qemu-kvm",
            "boot_wait": "20s",
            "boot_command": [
                "<tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.centos6.docker.ks<enter><wait>"
            ],
            "format": "raw",
            "disk_size": "32770",
            "disk_interface": "virtio-scsi",
            "disk_image": false,
          "disk_compression": true,
            "disk_discard": "unmap",
            "disk_detect_zeroes": "unmap",
            "net_device": "virtio-net",
            "cpus": 2,
            "memory": 2048,
            "http_directory": "http",
            "headless": true,
            "iso_url": "https://vault.centos.org/6.10/isos/x86_64/CentOS-6.10-x86_64-minimal.iso",
            "iso_checksum": "sha256:7c0dee2a0494dabd84809b72ddb4b761f9ef92b78a506aef709b531c54d30770",
            "ssh_username": "root",
            "ssh_password": "locked",
            "ssh_port": 22,
            "ssh_timeout": "3600s",
            "shutdown_command": "shutdown -h now"
        },
        {
            "type": "qemu",
            "name": "generic-centos7-docker",
            "vm_name": "generic-centos7-docker",
            "output_directory": "output/generic-centos7-docker",
            "accelerator": "kvm",
            "qemu_binary": "/usr/libexec/qemu-kvm",
            "boot_wait": "20s",
            "boot_command": [
                "<tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.centos7.docker.ks<enter><wait>"
            ],
            "format": "raw",
            "disk_size": "32770",
            "disk_interface": "virtio-scsi",
            "disk_image": false,
          "disk_compression": true,
            "disk_discard": "unmap",
            "disk_detect_zeroes": "unmap",
            "net_device": "virtio-net",
            "cpus": 2,
            "memory": 2048,
            "http_directory": "http",
            "headless": true,
            "iso_url": "https://mirrors.edge.kernel.org/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso",
            "iso_checksum": "sha256:07b94e6b1a0b0260b94c83d6bb76b26bf7a310dc78d7a9c7432809fb9bc6194a",
            "ssh_username": "root",
            "ssh_password": "locked",
            "ssh_port": 22,
            "ssh_timeout": "3600s",
            "shutdown_command": "shutdown -h now"
        },
        {
            "type": "qemu",
            "name": "generic-centos8-docker",
            "vm_name": "generic-centos8-docker",
            "output_directory": "output/generic-centos8-docker",
            "accelerator": "kvm",
            "qemu_binary": "/usr/libexec/qemu-kvm",
            "boot_wait": "20s",
            "boot_command": [
                "<tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.centos8.docker.ks<enter><wait>"
            ],
            "format": "raw",
            "disk_size": "32770",
            "disk_interface": "virtio-scsi",
            "disk_image": false,
          "disk_compression": true,
            "disk_discard": "unmap",
            "disk_detect_zeroes": "unmap",
            "net_device": "virtio-net",
            "cpus": 2,
            "memory": 2048,
            "http_directory": "http",
            "headless": true,
            "iso_url": "https://mirrors.edge.kernel.org/centos/8.3.2011/isos/x86_64/CentOS-8.3.2011-x86_64-dvd1.iso",
            "iso_checksum": "sha256:aaf9d4b3071c16dbbda01dfe06085e5d0fdac76df323e3bbe87cce4318052247",
            "ssh_username": "root",
            "ssh_password": "locked",
            "ssh_port": 22,
            "ssh_timeout": "3600s",
            "shutdown_command": "shutdown -h now"
        },
        {
          "type": "qemu",
          "name": "generic-oracle7-docker",
          "vm_name": "generic-oracle7-docker",
          "output_directory": "output/generic-oracle7-docker",
          "accelerator": "kvm",
          "qemu_binary": "/usr/libexec/qemu-kvm",
          "boot_wait": "20s",
          "boot_command": [
            "<tab>text biosdevname=0 net.ifnames=0 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.oracle7.docker.ks<enter><wait>"
          ],
          "format": "qcow2",
          "disk_size": "32768",
          "disk_discard": "unmap",
          "disk_detect_zeroes": "unmap",
          "disk_cache": "unsafe",
          "disk_image": false,
          "disk_compression": true,
          "disk_interface": "virtio-scsi",
          "net_device": "virtio-net",
          "cpus": 2,
          "memory": 2048,
          "http_directory": "http",
          "headless": true,
          "iso_url": "https://mirrors.kernel.org/oracle/OL7/u9/x86_64/OracleLinux-R7-U9-Server-x86_64-dvd.iso",
          "iso_checksum": "sha256:dc2782bfd92b4c060cf8006fbc6e18036c27f599eebf3584a1a2ac54f008bf2f",
          "ssh_username": "root",
          "ssh_password": "locked",
          "ssh_port": 22,
          "ssh_timeout": "3600s",
          "shutdown_command": "echo 'locked' | sudo -S shutdown -P now"
        },
        {
          "type": "qemu",
          "name": "generic-oracle8-docker",
          "vm_name": "generic-oracle8-docker",
          "output_directory": "output/generic-oracle8-docker",
          "accelerator": "kvm",
          "qemu_binary": "/usr/libexec/qemu-kvm",
          "boot_wait": "20s",
          "boot_command": [
            "<tab>text biosdevname=0 net.ifnames=0 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.oracle8.docker.ks<enter><wait>"
          ],
          "format": "qcow2",
          "disk_size": "32768",
          "disk_discard": "unmap",
          "disk_detect_zeroes": "unmap",
          "disk_image": false,
          "disk_compression": true,
          "disk_interface": "virtio-scsi",
          "net_device": "virtio-net",
          "cpus": 2,
          "memory": 2048,
          "http_directory": "http",
          "headless": true,
          "iso_url": "https://mirrors.kernel.org/oracle/OL8/u3/x86_64/OracleLinux-R8-U3-x86_64-dvd.iso",
          "iso_checksum": "sha256:771e383adfd5406d1a360ff24822011a88cbb45b6019e2f1095758c46a406aaa",
          "ssh_username": "root",
          "ssh_password": "locked",
          "ssh_port": 22,
          "ssh_timeout": "3600s",
          "shutdown_command": "echo 'locked' | sudo -S shutdown -P now"
        },
        {
          "type": "qemu",
          "name": "generic-rhel6-docker",
          "vm_name": "generic-rhel6-docker",
          "output_directory": "output/generic-rhel6-docker",
          "accelerator": "kvm",
          "qemu_binary": "/usr/libexec/qemu-kvm",
          "boot_wait": "20s",
          "boot_command": [
            "<tab> text biosdevname=0 net.ifnames=0 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.rhel6.vagrant.ks<enter><wait>"
          ],
          "format": "qcow2",
          "disk_size": "32768",
          "disk_discard": "unmap",
          "disk_detect_zeroes": "unmap",
          "disk_image": false,
          "disk_compression": true,
          "disk_interface": "virtio-scsi",
          "net_device": "virtio-net",
          "cpus": 2,
          "memory": 2048,
          "http_directory": "http",
          "headless": true,
          "iso_url": "https://archive.org/download/rhel-server-6.10-x86_64-dvd/rhel-server-6.10-x86_64-dvd.iso",
          "iso_checksum": "sha256:1e15f9202d2cdd4b2bdf9d6503a8543347f0cb8cc06ba9a0dfd2df4fdef5c727",
          "ssh_username": "root",
          "ssh_password": "vagrant",
          "ssh_port": 22,
          "ssh_timeout": "3600s",
          "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now"
        },
        {
          "type": "qemu",
          "name": "generic-rhel7-docker",
          "vm_name": "generic-rhel7-docker",
          "output_directory": "output/generic-rhel7-docker",
          "accelerator": "kvm",
          "qemu_binary": "/usr/libexec/qemu-kvm",
          "boot_wait": "20s",
          "boot_command": [
            "<tab>text biosdevname=0 net.ifnames=0 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.rhel7.vagrant.ks<enter><wait>"
          ],
          "format": "qcow2",
          "disk_size": "32768",
          "disk_discard": "unmap",
          "disk_detect_zeroes": "unmap",
          "disk_image": false,
          "disk_compression": true,
          "disk_interface": "virtio-scsi",
          "net_device": "virtio-net",
          "cpus": 2,
          "memory": 2048,
          "http_directory": "http",
          "headless": true,
          "iso_urls": "https://archive.org/download/rhel-server-7.9-x86_64-dvd/rhel-server-7.9-x86_64-dvd.iso",
          "iso_checksum": "sha256:19d653ce2f04f202e79773a0cbeda82070e7527557e814ebbce658773fbe8191",
          "ssh_username": "root",
          "ssh_password": "vagrant",
          "ssh_port": 22,
          "ssh_timeout": "3600s",
          "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now"
        },
        {
          "type": "qemu",
          "name": "generic-rhel8-docker",
          "vm_name": "generic-rhel8-docker",
          "output_directory": "output/generic-rhel8-docker",
          "accelerator": "kvm",
          "qemu_binary": "/usr/libexec/qemu-kvm",
          "boot_wait": "20s",
          "boot_command": [
            "<tab>text biosdevname=0 net.ifnames=0 ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/generic.rhel8.vagrant.ks<enter><wait>"
          ],
          "format": "qcow2",
          "disk_size": "32768",
          "disk_discard": "unmap",
          "disk_detect_zeroes": "unmap",
          "disk_image": false,
          "disk_compression": true,
          "disk_interface": "virtio-scsi",
          "net_device": "virtio-net",
          "cpus": 2,
          "memory": 2048,
          "http_directory": "http",
          "headless": true,
          "iso_urls": "https://archive.org/download/rhel-8.3-x86_64-dvd/rhel-8.3-x86_64-dvd.iso",
          "iso_checksum": "sha256:30fd8dff2d29a384bd97886fa826fa5be872213c81e853eae3f9d9674f720ad0",
          "ssh_username": "root",
          "ssh_password": "vagrant",
          "ssh_port": 22,
          "ssh_timeout": "3600s",
          "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now"
        }
    ],
    "post-processors": [
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "NAME={{build_name}}",
                  "BOX={{split build_name \"-\" 1}}"
                ],
                "inline": [
                  "[ `docker images quay.io/generic/$BOX -q | wc -l` != 0 ] && docker rmi --force `docker images --quiet quay.io/generic/$BOX`",
                  "[ `docker images quay.io/roboxes/$BOX -q | wc -l` != 0 ] && docker rmi --force `docker images --quiet quay.io/roboxes/$BOX`",
                  "[ `docker images docker.io/roboxes/$BOX -q | wc -l` != 0 ] && docker rmi --force `docker images --quiet docker.io/roboxes/$BOX`",
                  "rm --recursive --force output/$NAME",
                  "exit 0"
                ]
            }
        ],
        [
            {
                "type": "artifice",
                "keep_input_artifact": false,
                "files": [
                    "output/{{build_name}}-{{user `box_version`}}.tar"
                ]
            },
            {
                "format": "gz",
                "type": "compress",
                "compression_level": 9,
                "keep_input_artifact": true,
                "output": "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
            },
            {
                "type": "checksum",
                "checksum_types": [
                    "sha256"
                ],
                "output": "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz.sha256",
                "keep_input_artifact": true
            }
        ],
        [
            {
                "type": "artifice",
                "keep_input_artifact": false,
                "files": [
                    "output/{{build_name}}-{{user `box_version`}}.tar"
                ]
            },
            {
                "format": "gz",
                "type": "compress",
                "compression_level": 9,
                "keep_input_artifact": false,
                "output": "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
            },
            {
                "type": "checksum",
                "checksum_types": [
                    "sha256"
                ],
                "output": "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz.sha256",
                "keep_input_artifact": true
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "{{user `box_version`}}",
                "repository": "quay.io/generic/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `quay_username`}}",
                "login_password": "{{user `quay_password`}}"
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "latest",
                "repository": "quay.io/generic/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `quay_username`}}",
                "login_password": "{{user `quay_password`}}"
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "{{user `box_version`}}",
                "repository": "quay.io/roboxes/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `quay_username`}}",
                "login_password": "{{user `quay_password`}}"
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "latest",
                "repository": "quay.io/roboxes/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `quay_username`}}",
                "login_password": "{{user `quay_password`}}"
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "{{user `box_version`}}",
                "repository": "docker.io/roboxes/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `docker_username`}}",
                "login_password": "{{user `docker_password`}}"
            },
            {
                "type": "vagrant",
                "compression_level": 9,
                "keep_input_artifact": true,
                "output": "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.box",
                "include": [
                    "tpl/roboxes/info.json"
                ]
            },
            {
                "type": "checksum",
                "checksum_types": [
                    "sha256"
                ],
                "output": "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.box.sha256",
                "keep_input_artifact": true
            }
        ],
        [
            {
                "type": "shell-local",
                "environment_vars": [
                  "FILENAME=output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ],
                "inline": [
                  "[ -f $FILENAME ] && touch $FILENAME",
                  "exit 0"
                ]
            },
            {
                "type": "artifice",
                "keep_input_artifact": true,
                "files": [
                    "output/roboxes-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.tar.gz"
                ]
            },
            {
                "type": "docker-import",
                "keep_input_artifact": true,
                "tag": "latest",
                "repository": "docker.io/roboxes/{{split build_name \"-\" 1}}",
                "changes": [
                  "CMD [\"/bin/bash\"]",
                  "ENV \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
                ]
            },
            {
                "type": "docker-push",
                "login": "false",
                "login_username": "{{user `docker_username`}}",
                "login_password": "{{user `docker_password`}}"
            },
            {
                "type": "vagrant",
                "compression_level": 9,
                "keep_input_artifact": true,
                "output": "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.box",
                "include": [
                    "tpl/generic/info.json"
                ]
            },
            {
                "type": "checksum",
                "checksum_types": [
                    "sha256"
                ],
                "output": "output/generic-{{split build_name \"-\" 1}}-{{split build_name \"-\" 2}}-{{user `box_version`}}.box.sha256",
                "keep_input_artifact": true
            }
        ]
    ]
}
