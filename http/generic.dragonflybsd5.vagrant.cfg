
HOSTNAME=dragonflybsd5.localdomain

# Not sure if these options apply to DragonFly, but keeping them anyways.
FETCH_RETRY=5
FETCH_TIMEOUT=30
export nonInteractive="YES"

if [ -e /dev/vtbd0 ]; then
  DISK=vtbd0
elif [ -e /dev/ada0 ]; then
  DISK=ad0
elif [ -e /dev/ada0 ]; then
  DISK=ada0
elif [ -e /dev/da0 ]; then
  DISK=da0
elif [ -e /dev/ad0 ]; then
  DISK=ad0
else
  echo "ERROR: There is no disk available for installation" >&2
  exit 1
fi

dd if=/dev/zero of="/dev/${DISK}" bs=32k count=16 &&
    fdisk -IB "$DISK" &&
    disklabel64 -r -w "${DISK}s1" auto &&
    disklabel64 -B "${DISK}s1" &&
    disklabel64 "${DISK}s1" > /tmp/labels

cat <<-EOF >> /tmp/labels
a: 768m 0 4.2BSD
b: 2g * swap
d: * * HAMMER
EOF

disklabel64 -R "${DISK}s1" /tmp/labels &&
    newfs "/dev/${DISK}s1a" &&
    newfs_hammer -f -L ROOT "/dev/${DISK}s1d" &&
    mount_hammer "/dev/${DISK}s1d" /mnt &&
    mkdir /mnt/boot &&
    mount "/dev/${DISK}s1a" /mnt/boot &&
    mkdir /mnt/pfs &&
    hammer pfs-master /mnt/pfs/usr &&
    hammer pfs-master /mnt/pfs/usr.obj &&
    hammer pfs-master /mnt/pfs/var &&
    hammer pfs-master /mnt/pfs/var.crash &&
    hammer pfs-master /mnt/pfs/var.tmp &&
    hammer pfs-master /mnt/pfs/tmp &&
    hammer pfs-master /mnt/pfs/home &&
    mkdir /mnt/usr &&
    mkdir /mnt/var &&
    mkdir /mnt/tmp &&
    mkdir /mnt/home &&
    mount_null /mnt/pfs/usr /mnt/usr &&
    mount_null /mnt/pfs/var /mnt/var &&
    mount_null /mnt/pfs/tmp /mnt/tmp &&
    mount_null /mnt/pfs/home /mnt/home &&
    mkdir /mnt/usr/obj &&
    mkdir /mnt/var/tmp &&
    mkdir /mnt/var/crash &&
    mount_null /mnt/pfs/var.tmp /mnt/var/tmp &&
    mount_null /mnt/pfs/var.crash /mnt/var/crash &&
    mount_null /mnt/pfs/usr.obj /mnt/usr/obj &&
    chmod 1777 /mnt/tmp &&
    chmod 1777 /mnt/var/tmp &&
    cpdup -o / /mnt &&
    cpdup -o /boot /mnt/boot &&
    cpdup -o /usr /mnt/usr &&
    cpdup -o /usr/local/etc /mnt/usr/local/etc &&
    cpdup -o /var /mnt/var &&
    cpdup -i0 /etc.hdd /mnt/etc &&
    chflags -R nohistory /mnt/tmp &&
    chflags -R nohistory /mnt/var/tmp &&
    chflags -R nohistory /mnt/var/crash &&
    chflags -R nohistory /mnt/usr/obj

cat <<-EOF > /mnt/etc/fstab
# Device		Mountpoint	FStype	Options		Dump	Pass#
/dev/${DISK}s1d		/		hammer	rw		1	1
/dev/${DISK}s1a		/boot		ufs	rw		1	1
/dev/${DISK}s1b		none		swap	sw		0	0
/pfs/usr		/usr		null	rw		0	0
/pfs/var		/var		null	rw		0	0
/pfs/tmp		/tmp		null	rw		0	0
/pfs/home		/home		null	rw		0	0
/pfs/var.tmp		/var/tmp	null	rw		0	0
/pfs/usr.obj		/usr/obj	null	rw		0	0
/pfs/var.crash		/var/crash	null	rw		0	0
proc			/proc		procfs	rw		0	0
EOF

cat <<-EOF > /mnt/boot/loader.conf
kernel_options=""
autoboot_delay="1"
vfs.root.mountfrom="hammer:${DISK}s1d"
EOF

INTERFACE=$(route get default | awk '/interface/ { print $2 }')

cat <<-EOF > /mnt/etc/rc.conf
ifconfig_DEFAULT="DHCP"
ifconfig_rl0="DHCP"
ifconfig_em0="DHCP"
ifconfig_de0="DHCP"
ifconfig_vtnet0="DHCP"
ifconfig_${INTERFACE}="DHCP"
ipv6_network_interfaces="none"
sshd_enable="YES"
dntpd_enable="YES"
hostname="${HOSTNAME}"
dumpdev="/dev/${DISK}s1b"
EOF

ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 chroot /mnt pkg install sed
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 chroot /mnt pkg install curl
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 chroot /mnt pkg install sudo
ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 chroot /mnt pkg install bash

# Setup bash a valid login shell.
chroot /mnt ln /usr/local/bin/bash /usr/bin/bash
chroot /mnt ln /usr/local/bin/bash /bin/bash

cat <<-EOF >> /mnt/etc/shells
/usr/bin/bash
/bin/bash
EOF

echo 'vagrant' | chroot /mnt pw useradd vagrant -h 0 -n vagrant -m
echo 'vagrant' | chroot /mnt pw usermod root -h 0 -n root

chroot /mnt chsh -s /usr/bin/bash root
chroot /mnt chsh -s /usr/bin/bash vagrant

# Modify OpenSSH to allow root logins.
sed -i -e "s/^[# ]*UseDNS.*/UseDNS no/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*UsePAM.*/UsePAM yes/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*PermitRootLogin.*/PermitRootLogin yes/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*PasswordAuthentication.*/PasswordAuthentication yes/g" /mnt/etc/ssh/sshd_config

# Allow vagrant to switch user to root.
cat <<-EOF > /mnt/usr/local/etc/sudoers.d/vagrant
Defaults:vagrant !requiretty
vagrant ALL=(ALL) NOPASSWD: ALL
EOF

chmod 440 /mnt/usr/local/etc/sudoers.d/vagrant

reboot
